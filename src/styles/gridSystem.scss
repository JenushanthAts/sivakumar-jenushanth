@use "sass:map";

$breakpoints: (
  xs: 0,
  sm: 576px,
  md: 768px,
  lg: 992px,
  xl: 1200px,
  xxl: 1400px,
);

$columns: 12; // Number of columns in the grid
$gutter-width: 1rem; // Space between columns

@mixin respond-to($breakpoint) {
  @if map.has-key($breakpoints, $breakpoint) {
    @media (min-width: map.get($breakpoints, $breakpoint)) {
      @content;
    }
  }
}

// Grid container
.grid-container {
  width: 85%;
  margin: 0 auto;
  display: flex;
  flex-wrap: wrap;
  box-sizing: border-box;
}

.mt-3 {
  margin-top: 3rem;
}

$width: (
  "8": 2rem,
  "10": 2.5rem,
  "12": 3rem,
);

// Loop through the map to create font-size classes
@each $key, $value in $width {
  .w-#{$key} {
    width: $value;
  }
}

$height: (
  "8": 2rem,
  "10": 2.5rem,
  "12": 3rem,
);

// Loop through the map to create font-size classes
@each $key, $value in $height {
  .h-#{$key} {
    height: $value;
  }
}

.grid {
  display: grid;
}

.flex {
  display: flex;
}

.items-center {
  align-items: center;
}
$flex-directions: (
  "col": column,
  "row": row,
);

// Loop through the map to create font-size classes
@each $key, $value in $flex-directions {
  .flex-#{$key} {
    flex-direction: $value;
  }
}

$gaps: (
  "6": 1.5rem,
  "8": 2rem,
  "10": 2.5rem,
  "12": 3rem,
);

// Loop through the map to create font-size classes
@each $key, $value in $gaps {
  .gap-#{$key} {
    gap: $value;
  }
}

$grid-cols: (
  1: repeat(1, minmax(0, 1fr)),
  2: repeat(2, minmax(0, 1fr)),
  3: repeat(3, minmax(0, 1fr)),
  4: repeat(4, minmax(0, 1fr)),
  5: repeat(5, minmax(0, 1fr)),
);

@each $key, $value in $grid-cols {
  .grid-cols-#{$key} {
    grid-template-columns: $value;
  }
}

// Generate grid column classes
@each $breakpoint, $size in $breakpoints {
  @include respond-to($breakpoint) {
    @for $i from 1 through $columns {
      .#{$breakpoint}\:grid-cols-#{$i} {
        grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
      }
    }
  }
}

$paddings: (
  "4": 1rem,
  "6": 1.5rem,
  "8": 2rem,
  "10": 2.5rem,
  "12": 3rem,
);

// Loop through the map to create font-size classes
@each $key, $value in $paddings {
  .p-#{$key} {
    padding: $value;
  }
}
